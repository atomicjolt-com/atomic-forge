import { hasStorageAccessAPI } from "./platform_storage";
import { hasCookie } from "./cookies";
import { storeState } from "./platform_storage";
import { showLaunchNewWindow } from "../html/launch_new_window";
import { showCookieError } from "../html/cookie_error";
export async function ltiStorageLaunch(settings) {
    let submitToPlatform = () => { window.location.replace(settings.responseUrl); };
    if (hasCookie(settings)) {
        return submitToPlatform();
    }
    if (settings.ltiStorageParams) {
        try {
            await storeState(settings.state, settings.ltiStorageParams);
            return submitToPlatform();
        }
        catch (e) {
            console.error(e);
        }
    }
    if (window.self !== window.top) {
        let showRequestStorageAccess = false;
        if (hasStorageAccessAPI()) {
            try {
                let hasAccess = await document.hasStorageAccess();
                if (!hasAccess) {
                    showRequestStorageAccess = true;
                }
            }
            catch (e) {
                console.log(e);
            }
        }
        showLaunchNewWindow(settings, { showRequestStorageAccess, disableLaunch: false, showStorageAccessDenied: false });
    }
    else {
        showCookieError(settings);
    }
}
//# sourceMappingURL=lti_storage_launch.js.map