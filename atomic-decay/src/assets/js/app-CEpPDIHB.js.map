{"version":3,"file":"app-CEpPDIHB.js","sources":["../../../node_modules/@atomicjolt/lti-client/dist/client/launch.js","../../../client/app.ts"],"sourcesContent":["import { loadState } from \"../libs/platform_storage\";\nasync function validateLaunch(settings) {\n    if (settings.ltiStorageParams) {\n        // We have lti postMessage storage\n        try {\n            console.log(\"Using postMessage state validation\");\n            const state = await loadState(settings.state, settings.ltiStorageParams);\n            if (state == settings.state) {\n                return true;\n            }\n            return false;\n        }\n        catch (e) {\n            console.error(e);\n            return false;\n        }\n    }\n    return false;\n}\nexport async function ltiLaunch(settings) {\n    if (!settings.stateVerified) {\n        const result = await validateLaunch(settings);\n        return result;\n    }\n    return true;\n}\n//# sourceMappingURL=launch.js.map","import { ltiLaunch } from '@atomicjolt/lti-client';\nimport type { LaunchSettings } from '@atomicjolt/lti-client/types';\n\nconst launchSettings: LaunchSettings = window.LAUNCH_SETTINGS;\nltiLaunch(launchSettings).then((valid) => {\n  if (valid) {\n    document.body.innerHTML = `\n      <h1>Hello World</h1>\n    `;\n\n    const jwt = launchSettings.jwt; \n\n    // Deep Linking example\n    if (launchSettings.deepLinking) {\n      document.body.innerHTML += `\n        <h2>Deep Linking</h2>\n        <button id=\"deep-linking-button\">Deep Link</button>\n        <form id=\"deep-linking-form\" method=\"post\">\n          <input id=\"deep-link-jwt\" type=\"hidden\" name=\"JWT\" value=\"\" />\n          <button id=\"deep-link-submit\" type=\"submit\" style=\"display:none;\">Submit</button>\n        </form>\n      `;\n      const deepLinkingButton = document.getElementById('deep-linking-button');\n      if (deepLinkingButton) {\n        deepLinkingButton.addEventListener('click', () => {\n          const deepLink = {\n            type: 'html',\n            html: '<h2>Just saying hi!</h2>',\n            title: 'Hello World',\n            text: 'A simple hello world example',\n          };\n\n          fetch('/lti_services/sign_deep_link', {\n            method: 'POST',\n            body: JSON.stringify([deepLink]),\n            headers: {\n              'Authorization': `Bearer ${jwt}`,\n              'Content-Type': 'application/json'\n            }\n          })\n          .then(response => {\n            console.log(response);\n            return response.json();\n          })\n          .then(data => {\n            console.log(data);\n            const form = document.getElementById('deep-linking-form') as HTMLFormElement;\n            form?.setAttribute('action', launchSettings?.deepLinking?.deep_link_return_url || '');\n            const field = document.getElementById('deep-link-jwt');\n            field?.setAttribute('value', data.jwt);\n            form?.submit();            \n          })\n          .catch((error) => {\n            console.error('Error:', error);\n          });\n\n        });\n      }\n    }\n\n    // Example of calling the names and roles service\n    fetch('/lti_services/names_and_roles', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => response.json())\n    .then(data => console.log(data))\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n    \n  } else {\n    document.body.innerHTML = 'Failed to launch';\n  }\n});\n"],"names":["validateLaunch","settings","loadState","e","ltiLaunch","launchSettings","valid","jwt","deepLinkingButton","response","data","form","error"],"mappings":"mCACA,eAAeA,EAAeC,EAAU,CACpC,GAAIA,EAAS,iBAET,GAAI,CAGA,OAFA,QAAQ,IAAI,oCAAoC,EAClC,MAAMC,EAAUD,EAAS,MAAOA,EAAS,gBAAgB,GAC1DA,EAAS,KAI1B,OACOE,EAAG,CACN,eAAQ,MAAMA,CAAC,EACR,EACX,CAEJ,MAAO,EACX,CACO,eAAeC,EAAUH,EAAU,CACtC,OAAKA,EAAS,cAIP,GAHY,MAAMD,EAAeC,CAAQ,CAIpD,CCtBA,MAAMI,EAAiC,OAAO,gBAC9CD,EAAUC,CAAc,EAAE,KAAMC,GAAU,CACxC,GAAIA,EAAO,CACT,SAAS,KAAK,UAAY;AAAA;AAAA,MAI1B,MAAMC,EAAMF,EAAe,IAG3B,GAAIA,EAAe,YAAa,CAC9B,SAAS,KAAK,WAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQ3B,MAAMG,EAAoB,SAAS,eAAe,qBAAqB,EACnEA,GACFA,EAAkB,iBAAiB,QAAS,IAAM,CAQhD,MAAM,+BAAgC,CACpC,OAAQ,OACR,KAAM,KAAK,UAAU,CATN,CACf,KAAM,OACN,KAAM,2BACN,MAAO,cACP,KAAM,8BAAA,CAKwB,CAAC,EAC/B,QAAS,CACP,cAAiB,UAAUD,CAAG,GAC9B,eAAgB,kBAAA,CAClB,CACD,EACA,KAAKE,IACJ,QAAQ,IAAIA,CAAQ,EACbA,EAAS,KAAA,EACjB,EACA,KAAKC,GAAQ,CACZ,QAAQ,IAAIA,CAAI,EAChB,MAAMC,EAAO,SAAS,eAAe,mBAAmB,EACxDA,GAAM,aAAa,SAAUN,GAAgB,aAAa,sBAAwB,EAAE,EACtE,SAAS,eAAe,eAAe,GAC9C,aAAa,QAASK,EAAK,GAAG,EACrCC,GAAM,OAAA,CACR,CAAC,EACA,MAAOC,GAAU,CAChB,QAAQ,MAAM,SAAUA,CAAK,CAC/B,CAAC,CAEH,CAAC,CAEL,CAGA,MAAM,gCAAiC,CACrC,OAAQ,MACR,QAAS,CACP,cAAiB,UAAUL,CAAG,GAC9B,eAAgB,kBAAA,CAClB,CACD,EACA,KAAKE,GAAYA,EAAS,MAAM,EAChC,KAAKC,GAAQ,QAAQ,IAAIA,CAAI,CAAC,EAC9B,MAAOE,GAAU,CAChB,QAAQ,MAAM,SAAUA,CAAK,CAC/B,CAAC,CAEH,MACE,SAAS,KAAK,UAAY,kBAE9B,CAAC","x_google_ignoreList":[0]}